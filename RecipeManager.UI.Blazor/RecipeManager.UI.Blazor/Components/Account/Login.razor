@using FluentValidation
@using MudBlazor
@using RecipeManager.Shared.Contracts.User.Login
@using RecipeManager.Shared.Contracts.User.Registration
@using RecipeManager.UI.Blazor.Components.Extensions
@inject ISnackbar Snackbar

<MudPaper Class="pa-6 mx-auto" MaxWidth="400px">
    <MudForm @ref="form" Model="@loginModel" ValidationDelay="0" @bind-IsValid="@isSubmitEnabled">
        <MudText Typo="Typo.h5" Class="mb-4">Login</MudText>

        <MudTextField @bind-Value="loginModel.UserName" Label="Username" For="@(() => loginModel.UserName)" Required=true/>
        <MudTextField @bind-Value="loginModel.Password" Label="Password" For="@(() => loginModel.Password)" InputType="InputType.Password" Required=true />

        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="OnSubmit" Disabled="@(!isSubmitEnabled)" Class="mt-4" FullWidth>
            Register
        </MudButton>
    </MudForm>
</MudPaper>

@code {
    private MudForm? form;
    private UserLoginModel loginModel = new();
    private bool isSubmitEnabled = false;

    private async Task OnSubmit()
    {
        // TODO: Call your registration API here
        Snackbar.Add("Registration successful!", MudBlazor.Severity.Success);
        loginModel = new();
    }
}
